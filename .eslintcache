[{"D:\\shipment\\src\\index.js":"1","D:\\shipment\\src\\App.js":"2","D:\\shipment\\src\\reportWebVitals.js":"3","D:\\shipment\\src\\component\\fetchService.js":"4","D:\\shipment\\src\\component\\Dashboard.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":198,"mtime":1607669767293,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":569,"mtime":1607594242235,"results":"10","hashOfConfig":"7"},{"size":16713,"mtime":1607669953539,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"em3e83",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"D:\\shipment\\src\\index.js",[],["24","25"],"D:\\shipment\\src\\App.js",["26"],"D:\\shipment\\src\\reportWebVitals.js",[],"D:\\shipment\\src\\component\\fetchService.js",[],"D:\\shipment\\src\\component\\Dashboard.js",["27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n// import {showDataApi} from \"./FetchApi\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(160),\r\n      height: theme.spacing(250),\r\n      flexGrow: 1,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: \"#2d3436\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  paperblock: {\r\n    backgroundColor: \"#3742fa\",\r\n    display: \"flex\",\r\n    margin: theme.spacing(1),\r\n    width: theme.spacing(11),\r\n    height: theme.spacing(11),\r\n  },\r\n  paperdiv: {\r\n    marginTop: 30,\r\n    // marginLeft:100,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  papertrack: {\r\n    border: \"1px solid #d1ccc0\",\r\n    display: \"flex\",\r\n    // margin: theme.spacing(4),\r\n    width: theme.spacing(50),\r\n    height: theme.spacing(65),\r\n    // marginTop:'2000'\r\n  },\r\n  tracking: {\r\n    display: \"flex\",\r\n    margin: theme.spacing(1),\r\n    width: theme.spacing(100),\r\n    height: theme.spacing(70),\r\n    border: \"1px solid #d1ccc0\",\r\n  },\r\n  flag: {\r\n    position: \"absolute\",\r\n    right: \"47%\",\r\n    width: 50,\r\n    height: 50,\r\n    backgroundColor: \"#7f8fa6\",\r\n    borderRadius: \"50%\",\r\n  },\r\n  root1: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    height: theme.spacing(70),\r\n    maxHeight: theme.spacing(70),\r\n    width: theme.spacing(100),\r\n  },\r\n}));\r\n\r\nconst columns = [\r\n  { id: \"name\", label: \"AWB NO\" },\r\n  { id: \"code\", label: \"TRANSPORTER\" },\r\n  {\r\n    id: \"population\",\r\n    label: \"SOURCE\",\r\n  },\r\n  {\r\n    id: \"size\",\r\n    label: \"DESTINATION\",\r\n  },\r\n  {\r\n    id: \"density\",\r\n    label: \"BRAND\",\r\n  },\r\n  {\r\n    id: \"density\",\r\n    label: \"START DATE\",\r\n  },\r\n  {\r\n    id: \"density\",\r\n    label: \"ETD\",\r\n  },\r\n  {\r\n    id: \"density\",\r\n    label: \"STATUS\",\r\n  },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [getDataList, setDataList] = React.useState([]);\r\n  const [getDataListTemp, setDataListTemp] = React.useState([]);\r\n  const [getContainer, setContainer] = React.useState();\r\n  const [getDEL, setDEL] = React.useState(\"\");\r\n  const [getINT, setINT] = React.useState(\"\");\r\n  const [getOOD, setOOD] = React.useState(\"\");\r\n  const [getDEX, setDEX] = React.useState(\"\");\r\n  const [getNFI, setNFI] = React.useState(\"\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [getColor, setColor] = React.useState(\"#70a1ff\");\r\n  const open = Boolean(anchorEl);\r\n  const [getSCAN, setSCAN] = React.useState([]);\r\n  // console.log(\"shubham\", getDataList);\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClick = (res) => {\r\n    setColor(\"#3742fa\");\r\n    // switch (opt) {\r\n    //   case 1:\r\n    //   break;\r\n    // case 2:\r\n    fetchIntData(res);\r\n    //   break;\r\n    // case 3:\r\n    fetchOodData(res);\r\n    //   break;\r\n    // case 4:\r\n    fetchDexData(res);\r\n    //   break;\r\n    // case 5:\r\n    fetchNfiData(res);\r\n    setContainer(fetchDelData(res));\r\n    // break;\r\n    // }\r\n  };\r\n\r\n  function FetchApi() {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer tTU3gFVUdP\");\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({ email: \"shubhamguptasix@gmail.com\" });\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      \"https://f0ztti2nsk.execute-api.ap-south-1.amazonaws.com/v1/consignment/fetch\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setDataList(result);\r\n        setDataListTemp(result);\r\n        handleClick(result);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  // console.log(\"aaaaaaaaaaaa\", getDataList);\r\n  var del = 0;\r\n  const fetchDelData = (res) => {\r\n    var arr = [];\r\n    res.map((item) => {\r\n      if (item.current_status_code === \"DEL\") arr.push(item);\r\n    });\r\n    setDEL(arr.length);\r\n    setDataListTemp(arr);\r\n  };\r\n  var int = 0;\r\n  const fetchIntData = (res) => {\r\n    var arr = [];\r\n    res.map((item) => {\r\n      if (item.current_status_code === \"INT\") arr.push(item);\r\n    });\r\n    setINT(arr.length);\r\n    setDataListTemp(arr);\r\n  };\r\n\r\n  // console.log(\"xcxcxdswrff\", getINT);\r\n  var ood = 0;\r\n  const fetchOodData = (res) => {\r\n    var arr = [];\r\n    res.map((item) => {\r\n      if (item.current_status_code === \"OOD\") arr.push(item);\r\n    });\r\n    setOOD(arr.length);\r\n    setDataListTemp(arr);\r\n  };\r\n  var dex = 0;\r\n  const fetchDexData = (res) => {\r\n    var arr = [];\r\n    res.map((item) => {\r\n      if (item.current_status_code === \"DEX\") arr.push(item);\r\n    });\r\n    setDEX(arr.length);\r\n    setDataListTemp(arr);\r\n  };\r\n  var nfi = 0;\r\n  const fetchNfiData = (res) => {\r\n    var arr = [];\r\n    res.map((item) => {\r\n      if (item.current_status_code === \"NFI\") arr.push(item);\r\n    });\r\n    setNFI(arr.length);\r\n    setDataListTemp(arr);\r\n  };\r\n\r\n  useEffect(function () {\r\n    FetchApi();\r\n    // setContainer(fetchDelData());\r\n  }, []);\r\n  function RightAlignedTimeline() {\r\n    return (\r\n      <Timeline align=\"left\" style={{ marginLeft: -350, marginTop: 90 }}>\r\n        <TimelineItem>\r\n          <TimelineSeparator>\r\n            <img alt=\"\" src=\"images/destination.svg\" className={classes.flag} />\r\n            {/* <Avatar src=\"images/destination.svg\" className={classes.flag} /> */}\r\n            <TimelineConnector />\r\n          </TimelineSeparator>\r\n        </TimelineItem>\r\n        {getSCAN.map((item, index) => (\r\n          <TimelineItem>\r\n            <TimelineSeparator>\r\n              <TimelineDot />\r\n              {index != getSCAN.length - 1 ? <TimelineConnector /> : \"\"}\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n              {item.location} {item.time}\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n      </Timeline>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper variant=\"outlined\">\r\n        <AppBar position=\"static\" style={{ backgroundColor: \"#ffffff\" }}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <img\r\n                alt=\"\"\r\n                src=\"images/flag.jpg\"\r\n                style={{ width: 40, height: 40 }}\r\n              />\r\n              &nbsp;\r\n              <text style={{ fontSize: 13, color: \"#2d3436\", marginTop: 7 }}>\r\n                <b>Intugine</b>\r\n              </text>\r\n            </Typography>\r\n            {\r\n              <div>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMenu}\r\n                  color=\"#2d3436\"\r\n                >\r\n                  <AccountCircle style={{ height: 40, width: 40 }} />\r\n                  &nbsp;\r\n                  <KeyboardArrowDownIcon />\r\n                </IconButton>\r\n\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                  <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                </Menu>\r\n              </div>\r\n            }\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className={classes.paperdiv}>\r\n          <div>\r\n            <Paper\r\n              variant=\"outlined\"\r\n              className={classes.paperblock}\r\n              onClick={() => fetchDelData(getDataList)}\r\n            >\r\n              <h5 style={{ color: \"white\", marginTop: 7, marginLeft: 10 }}>\r\n                DEL\r\n              </h5>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;\r\n              <h5\r\n                style={{\r\n                  color: \"white\",\r\n                  marginTop: 50,\r\n                  fontSize: 30,\r\n                  fontWeight: 10,\r\n                  marginLeft: -25,\r\n                }}\r\n              >\r\n                {getDEL}\r\n              </h5>\r\n            </Paper>\r\n          </div>\r\n          <div>\r\n            <Paper\r\n              variant=\"outlined\"\r\n              className={classes.paperblock}\r\n              onClick={() => fetchIntData(getDataList)}\r\n            >\r\n              <h5 style={{ color: \"white\", marginTop: 7, marginLeft: 10 }}>\r\n                INT\r\n              </h5>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;\r\n              <h5\r\n                style={{\r\n                  color: \"white\",\r\n                  marginTop: 50,\r\n                  fontSize: 30,\r\n                  fontWeight: 10,\r\n                  marginLeft: -20,\r\n                }}\r\n              >\r\n                {getINT}\r\n              </h5>\r\n            </Paper>\r\n          </div>\r\n          <div>\r\n            <Paper\r\n              variant=\"outlined\"\r\n              className={classes.paperblock}\r\n              onClick={() => fetchOodData(getDataList)}\r\n            >\r\n              <h5 style={{ color: \"white\", marginTop: 7, marginLeft: 10 }}>\r\n                OOD\r\n              </h5>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;\r\n              <h5\r\n                style={{\r\n                  color: \"white\",\r\n                  marginTop: 50,\r\n                  fontSize: 30,\r\n                  fontWeight: 10,\r\n                  marginLeft: -20,\r\n                }}\r\n              >\r\n                {getOOD}\r\n              </h5>\r\n            </Paper>\r\n          </div>\r\n          <div>\r\n            <Paper\r\n              variant=\"outlined\"\r\n              className={classes.paperblock}\r\n              onClick={() => fetchDexData(getDataList)}\r\n            >\r\n              <h5 style={{ color: \"white\", marginTop: 7, marginLeft: 10 }}>\r\n                DEX\r\n              </h5>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;\r\n              <h5\r\n                style={{\r\n                  color: \"white\",\r\n                  marginTop: 50,\r\n                  fontSize: 30,\r\n                  fontWeight: 10,\r\n                  marginLeft: -20,\r\n                }}\r\n              >\r\n                {getDEX}\r\n              </h5>\r\n            </Paper>\r\n          </div>\r\n          <div>\r\n            <Paper\r\n              variant=\"outlined\"\r\n              className={classes.paperblock}\r\n              onClick={() => fetchNfiData(getDataList)}\r\n            >\r\n              <h5 style={{ color: \"white\", marginTop: 7, marginLeft: 10 }}>\r\n                NFI\r\n              </h5>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;\r\n              <h5\r\n                style={{\r\n                  color: \"white\",\r\n                  marginTop: 50,\r\n                  fontSize: 30,\r\n                  fontWeight: 10,\r\n                  marginLeft: -20,\r\n                }}\r\n              >\r\n                {getNFI}\r\n              </h5>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <div style={{ marginTop: 60, marginLeft: 30 }}>\r\n            <Paper variant=\"outlined\" square className={classes.papertrack}>\r\n              {RightAlignedTimeline()}\r\n            </Paper>\r\n          </div>\r\n          <div style={{ marginTop: 20, marginLeft: 30 }}>\r\n            <Paper variant=\"outlined\" square className={classes.tracking}>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <Paper className={classes.root1}>\r\n                  <TableContainer className={classes.container}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          {columns.map((column) => (\r\n                            <TableCell\r\n                              key={column.id}\r\n                              align={column.align}\r\n                              style={{ minWidth: column.minWidth }}\r\n                            >\r\n                              {column.label}\r\n                            </TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {getDataListTemp\r\n                          .slice(\r\n                            page * rowsPerPage,\r\n                            page * rowsPerPage + rowsPerPage\r\n                          )\r\n                          .map((row, index) => {\r\n                            var expected_delivery_date = \"Not Exist\";\r\n                            try {\r\n                              expected_delivery_date =\r\n                                row.extra_fields.expected_delivery_date;\r\n                            } catch (e) {\r\n                              console.log(e);\r\n                            }\r\n\r\n                            return (\r\n                              <TableRow\r\n                                onClick={() => setSCAN(row.scan)}\r\n                                hover\r\n                                role=\"checkbox\"\r\n                                tabIndex={-1}\r\n                                key={row.code}\r\n                              >\r\n                                <TableCell>{row.awbno}</TableCell>\r\n                                <TableCell>{row.carrier}</TableCell>\r\n                                <TableCell>{row.from}</TableCell>\r\n                                <TableCell>{row.to}</TableCell>\r\n                                <TableCell>{row.carrier}</TableCell>\r\n                                <TableCell>{row.pickup_date}</TableCell>\r\n                                <TableCell>{expected_delivery_date}</TableCell>\r\n                                <TableCell>{row.current_status}</TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={getDataListTemp.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":1,"column":28,"nodeType":"49","messageId":"50","endLine":1,"endColumn":36},{"ruleId":"47","severity":1,"message":"52","line":18,"column":8,"nodeType":"49","messageId":"50","endLine":18,"endColumn":14},{"ruleId":"47","severity":1,"message":"53","line":130,"column":10,"nodeType":"49","messageId":"50","endLine":130,"endColumn":22},{"ruleId":"47","severity":1,"message":"54","line":138,"column":10,"nodeType":"49","messageId":"50","endLine":138,"endColumn":18},{"ruleId":"47","severity":1,"message":"55","line":208,"column":7,"nodeType":"49","messageId":"50","endLine":208,"endColumn":10},{"ruleId":"56","severity":1,"message":"57","line":211,"column":20,"nodeType":"58","messageId":"59","endLine":211,"endColumn":22},{"ruleId":"47","severity":1,"message":"60","line":217,"column":7,"nodeType":"49","messageId":"50","endLine":217,"endColumn":10},{"ruleId":"56","severity":1,"message":"57","line":220,"column":20,"nodeType":"58","messageId":"59","endLine":220,"endColumn":22},{"ruleId":"47","severity":1,"message":"61","line":228,"column":7,"nodeType":"49","messageId":"50","endLine":228,"endColumn":10},{"ruleId":"56","severity":1,"message":"57","line":231,"column":20,"nodeType":"58","messageId":"59","endLine":231,"endColumn":22},{"ruleId":"47","severity":1,"message":"62","line":237,"column":7,"nodeType":"49","messageId":"50","endLine":237,"endColumn":10},{"ruleId":"56","severity":1,"message":"57","line":240,"column":20,"nodeType":"58","messageId":"59","endLine":240,"endColumn":22},{"ruleId":"47","severity":1,"message":"63","line":246,"column":7,"nodeType":"49","messageId":"50","endLine":246,"endColumn":10},{"ruleId":"56","severity":1,"message":"57","line":249,"column":20,"nodeType":"58","messageId":"59","endLine":249,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":259,"column":6,"nodeType":"66","endLine":259,"endColumn":8,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":274,"column":22,"nodeType":"70","messageId":"71","endLine":274,"endColumn":24},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Avatar' is defined but never used.","'getContainer' is assigned a value but never used.","'getColor' is assigned a value but never used.","'del' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'int' is assigned a value but never used.","'ood' is assigned a value but never used.","'dex' is assigned a value but never used.","'nfi' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'FetchApi'. Either include it or remove the dependency array.","ArrayExpression",["74"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [FetchApi]",{"range":"77","text":"78"},[6965,6967],"[FetchApi]"]